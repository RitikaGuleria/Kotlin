//nullble tye and non nullable type,safe call perator,not null assrtion operator,elvis operator,if-else ,when,use of in and is operator,range etc.

fun main() 
{
    var favouriteActor:String?="Vijay Devarkonda"
    println(favouriteActor)
    
    favouriteActor=null
    println(favouriteActor)

    favouriteActor="Vijay Devarkonda"
    println(favouriteActor?.length)

}

//safe call operator- use the ?. safe call operator to access methods or properties of nullable variables.contains either value or null

fun main()
{
    var favouriteActor:String?="Vijay Devarkonda"
    println(favouriteActor?.length)
}

fun main()
{
    var favouriteActor:String?=null
    println(favouriteActor?.length)
}

//!! not-null assertion operator-it should be done only when the variable is always non-nullable or proper exception handling is set in place.

fun main() {
    var favoriteActor: String? ="Sandra Oh" //null- willl give error
    println(favoriteActor!!.length)
}

//nullable operator with if-else
fun main() 
{
    var hobby:String?="doing gym"
    var ans=if(hobby!=null) {hobby.length}
    else {0}
    
    println("The length of hobby is $ans")
}

//Elvis operator
fun main() 
{
    var hobby:String?="doing gym" //also do it for null value
    val ans=hobby?.length?:0
    println("Length is $ans")
    
}

fun main()
{   
    val trafficeSignalColor:String="Yellow";
    if(trafficeSignalColor=="Red")
    {
        println("Stop")
    }
    else if(trafficeSignalColor=="Yellow")
    {
     	println("Slow")
    }
    else if(trafficeSignalColor=="Green")
    {
        println("Go")
    }
    else
    {
        println("Invalid traffic signal color")
    }	
}

//when is preferred over if-else 

fun main()
{
    //when statement is preferrable ove if-else

    when(trafficeSignalColor)
    {
        "Red"->println("Stop")
        "Yellow"->println("Slow")
        "Green"->println("Go")
        else->println("Invalid taffic signal")
    }
}

//multiple condition using ,
fun main() 
{
    val x=3
    when(x)
    {
        2,3,5,7->println("Pime numbers between 1 to 10")
        else->println("Not a prime number")
    }
}
//range 
fun main() 
{
    val x=3
    when(x)
    {
        in 1..10->println("x= $x is a number between 1 to 10")
//	2, 3, 5, 7 -> println("x is a prime number between 1 and 10.")
//      in 1..10 -> println("x is a number between 1 and 10, but not a prime number.")
        else->println("x is not a number between 1 to 10")
    }
}
//is statement
fun main() {
    val x: Any = 4

    when (x) {
        2, 3, 5, 7 -> println("x is a prime number between 1 and 10.")
        in 1..10 -> println("x is a number between 1 and 10, but not a prime number.")
        is Int -> println("x is an integer number, but not between 1 and 10.")
        else -> println("x isn't an integer number.")
    }
}
fun main() {
    val trafficLightColor = "Black"

    val message = 
      if (trafficLightColor == "Red") "Stop"
      else if (trafficLightColor == "Yellow") "Slow"
      else if (trafficLightColor == "Green") "Go"
      else "Invalid traffic-light color"

    println(message)
}
fun main() 
{
    val x=4
    val message=
    if(x==3) "right answer"
    else "wrong answer"
    
    println(message)
}

